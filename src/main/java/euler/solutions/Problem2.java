package euler.solutions;

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

public class Problem2{

	public Problem2(){

	}

	public static void main(String[] args){
		System.out.println("Hello World");
		Problem2 instance = new Problem2();

		instance.printFibonacci();
	}

	public void printFibonacci(){
		int pos = 0;
		long fibNum = 0;
		long sum = 0;

		while(fibNum < 4000000){
			fibNum = getFibonacci(pos);
			if(fibNum % 2 == 0){
				System.out.println(fibNum);
				sum = fibNum + sum;
			}
			pos++;
		}

		System.out.println("this is sum: --------------" + sum);
	}

	public long getFibonacci(int pos){
		long result = 0;
		int counter = 0;
		long first = 0;
		long second = 1;
		long sum = 0;

		while(counter < pos){
			counter++;

			sum = first + second;
			first = second;
			second = sum;
		}
		//System.out.println("this is sum: --------------" + sum);
		result = sum;

		return result;
	}
}